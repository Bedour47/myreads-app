{"version":3,"sources":["BooksAPI.js","components/BookItem.js","components/BookList.js","components/Search.js","components/Home.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","BookItem","props","react_default","a","createElement","Fragment","className","style","width","height","backgroundImage","thumbnail","defaultValue","onChange","e","onUpdateBookShelf","target","value","disabled","title","authors","BookList","_this","this","_this$props","allBooks","bookList","map","key","findIndex","x","undefined","author","index","length","imageLinks","keys","Component","Search","state","searchedBooks","updateSearchedBooks","setState","updateQuery","trim","BooksAPI","results","_this2","_this$state","react_router_dom","to","type","placeholder","event","BookList_BookList","error","Home","currentlyReadingBooks","filter","wantToReadBooks","readBooks","BooksApp","updateBookShelf","response","currentState","b","_this3","react_router","exact","path","render","Home_Home","Search_Search","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bf4a5b6e.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\n\nexport default function BookItem (props) {\n        return (\n            <>\n                <li>\n                    <div className=\"book\">\n                        <div className=\"book-top\">\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${props.thumbnail})` }}></div>\n                            <div className=\"book-shelf-changer\">\n                                <select defaultValue={props.shelf} onChange = {(e) => props.onUpdateBookShelf(props.book, e.target.value)}>\n                                    <option value=\"move\" disabled>Move to...</option>\n                                    <option value=\"currentlyReading\">Currently Reading</option>\n                                    <option value=\"wantToRead\">Want to Read</option>\n                                    <option value=\"read\">Read</option>\n                                    <option value=\"none\">None</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"book-title\">{props.title}</div>\n                        <div className=\"book-authors\">{props.authors}</div>\n                    </div>\n                </li>\n            </>\n        )\n}","import React, { Component } from 'react'\nimport BookItem from './BookItem';\n\nexport default class BookList extends Component {\n    render() {\n        const { allBooks, books } = this.props\n\n        const bookList = books.map( book => \n            <BookItem \n                key= {book.id} \n                book={book} \n                shelf={\n                    allBooks.findIndex(x => x.id === book.id) >= 0 \n                    ? allBooks[allBooks.findIndex(x => x.id === book.id)].shelf \n                    : 'none' \n                } \n                title={book.title}  \n                authors={\n                    book.authors !== undefined && \n                    book.authors.map((author, index) => ( book.authors.length - 1  !== index ? author + ', ' : author ))\n                } \n                thumbnail={\n                    book.imageLinks !== undefined \n                    ? book.imageLinks[Object.keys(book.imageLinks)[1]] \n                    : 'https://media.istockphoto.com/photos/white-blank-book-cover-isolated-on-blue-picture-id478484670?k=6&m=478484670&s=612x612&w=0&h=LUWCrPzKDuBjrTE5JjWEhmRfK7ns-OGYX0aPimWx1_Y='\n                } \n                onUpdateBookShelf={this.props.onUpdateBookShelf} \n            />\n        )\n        return (\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                    {bookList}\n                </ol>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from '../BooksAPI'\nimport BookList from './BookList';\n\nexport default class Search extends Component {\n    state = {\n        query: '',\n        searchedBooks: []\n    }\n\n    // Update searchedBooks state\n    updateSearchedBooks = (books) => {\n        this.setState(() => ({\n            searchedBooks: books\n        }))\n    }\n\n    // Update search query state\n    updateQuery = (query) => {\n        this.setState(() => ({\n          query: query\n        }))\n    }\n\n    // Search function\n    search = (query) => { \n      this.updateQuery(query)    \n      query.trim().length > 0 \n      ? BooksAPI.search(query).then((results) => {\n            this.updateSearchedBooks(results)\n        })\n      : this.updateSearchedBooks([])\n  }\n\n    render() {\n        const { query, searchedBooks } = this.state\n        const { books, onUpdateBookShelf } = this.props\n\n        return (\n            <div className=\"search-books\">\n              <div className=\"search-books-bar\">\n              <Link to='/'><button className=\"close-search\" >Close</button></Link>\n                <div className=\"search-books-input-wrapper\">\n                  <input \n                    type=\"text\"\n                    placeholder=\"Search by title or author\"\n                    value={query}\n                    onChange={(event) => this.search(event.target.value)}\n                    />\n                </div>\n              </div>\n              <div className=\"search-books-results\">\n                {\n                  searchedBooks.length > 0 &&\n                  query.length > 0 &&\n                  <BookList allBooks={books} books={searchedBooks} onUpdateBookShelf={onUpdateBookShelf} />\n                }\n                {\n                  searchedBooks.error === 'empty query' &&\n                  <div>\n                    <p className=\"no-results\">No Results</p>\n                    <p className=\"search-terms\"><strong>The Available Search Terms:</strong><br/> 'Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS'</p>\n                  </div>\n                }\n            </div>\n          </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport BookList from './BookList';\n\nexport default class Home extends Component {\n    \n    render() {\n        const { books, onUpdateBookShelf } = this.props\n\n        // Set all book's shelf contents\n        const currentlyReadingBooks = books.filter( book => {\n            return book.shelf === 'currentlyReading'\n        })\n        const wantToReadBooks = books.filter( book => {\n            return book.shelf === 'wantToRead'\n        })\n        const readBooks = books.filter( book => {\n            return book.shelf === 'read'\n        })\n\n        return (\n            <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                  <BookList allBooks={books} books={currentlyReadingBooks} onUpdateBookShelf={onUpdateBookShelf} />\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\n                  <BookList allBooks={books} books={wantToReadBooks} onUpdateBookShelf={onUpdateBookShelf} />\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Read</h2>\n                  <BookList allBooks={books} books={readBooks} onUpdateBookShelf={onUpdateBookShelf} />\n                </div>\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <Link to='/search'><button>Add a book</button></Link>\n            </div>\n          </div>\n        )\n    }\n}\n","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Route, Switch } from 'react-router-dom'\nimport Search from './components/Search';\nimport Home from './components/Home';\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  }\n  \n  componentDidMount() {\n    // Get all books and update state\n    BooksAPI.getAll().then((response) => {\n      this.setState(() => ({\n        books: response\n      }))\n    });\n }\n\n  // Update book shelf function\n  updateBookShelf = (book, shelf) => {  \n    BooksAPI.update(book, shelf).then((response) => {\n      book.shelf = shelf\n      this.setState((currentState) => ({\n        books: currentState.books.filter((b) => {\n          return b.id !== book.id\n        }).concat([book])\n      }))\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path='/' render={() => (\n              <Home books={this.state.books} onUpdateBookShelf={this.updateBookShelf} />\n          )} />\n          <Route exact path='/search' render={() => (\n              <Search books={this.state.books} onUpdateBookShelf={this.updateBookShelf} />\n          )} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}